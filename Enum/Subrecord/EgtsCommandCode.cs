
namespace Transport.EGTS.Enum.Subrecord
{
	/// <summary>
	/// коды команд или параметров
	/// </summary>
	public enum EgtsCommandCode
	{
		#region commands

		/// <summary>
		/// Команда для передачи произвольных данных. Применяется, например, для передачи команд, сообщений и данных на периферийные устройства, модули, 
		/// подключенные к основному блоку Терминала, в определяемом данным модулем формате. При этом терминал не должен анализировать данные из поля DT (Таблица 33) 
		/// и в неизменном виде передать их по адресу, определяемому полем ADR (Таблица 33)
		/// Может быть использовано как подтверждение
		/// EGTS_RAW_DATA
		/// тип данных BINARY (до 65200 байт)
		/// </summary>
		RawData = 0x0000,

		/// <summary>
		/// Команда начала / окончания тестирования терминала:1 – начало тестирования;0 – окончание тестирования.
		/// EGTS_TEST_MODE
		/// тип данных BYTE
		/// </summary>
		TestMode = 0x0001,

		/// <summary>
		/// Подтверждение. Сообщение о результатах самодиагностики.  Генерируется АС автоматически без запроса от оператора.
		/// EGTS_SELF_TEST_RESULT
		/// тип данных STRING
		/// </summary>
		SelfTestResult = 0x0002,

		/// <summary>
		/// Запрос кодов ошибок.
		/// Может быть подтвержением, тогда в данных будет Список кодов ошибок состояний блоков, модулей и подсистем Терминала
		/// EGTS_TEST_GET_ERRORS
		/// тип данных -
		/// </summary>
		TestGetErrors = 0x0004,

		/// <summary>
		/// Очистка кодов ошибок. Для обработки данной команды оператор должен установить корректные значения полей ACL и AC из Таблицы 32.
		/// EGTS_TEST_CLEAR_ERRORS
		/// тип данных -
		/// </summary>
		TestClearError = 0x0005,

		/// <summary>
		/// Возврат к заводским установкам. Удаляются все установленные пользователем параметры, и производится возврат к заводским установкам. 
		/// Для обработки данной команды оператор должен установить корректные значения полей ACL и AC из Таблицы 32. 
		/// EGTS_CONFIG_RESET
		/// тип данных -
		/// </summary>
		ResetConfiguration = 0x0006,

		/// <summary>
		/// Установка кода авторизации на стороне АС. Для обработки данной команды оператор должен установить корректные значения полей ACL и AC из Таблицы 32.
		/// После подтверждения данной команды, АС будет использовать уже новые данные для сравнения со значением из поля AC  в некоторых присылаемых на АС командах
		/// EGTS_SET_AUTH_CODE
		/// тип данных BINARY
		/// </summary>
		SetAuthCode = 0x0007,

		/// <summary>
		/// Команда производит перезапуск основного ПО АС. Для обработки данной команды оператор должен установить корректные значения полей ACL и AC из Таблицы 32.
		/// EGTS_RESTART
		/// тип данных -
		/// </summary>
		Restart = 0x0008,

		/// <summary>
		/// Активация дискретных выходов. Параметр интерпретируется как битовое поле, определяющее, какие выходы активировать. 
		/// Бит 0 соответствует первому выходу, 1 - второму выходу. Если бит имеет значение 1, то выход активируется, если 0, то состояние выхода не изменяется
		/// EGTS_FLEET_DOUT_ON
		/// тип данных USHORT
		/// </summary>
		FleetDOUTOn = 0x0009,

		/// <summary>
		/// Деактивация дискретных выходов. Параметр интерпретируется как битовое поле, определяющее, какие выходы деактивировать.
		/// Бит 0 соответствует первому выходу, 1 - второму выходу. Если бит имеет значение 1, то выход деактивируется, если 0, то состояние выхода не изменяется
		/// EGTS_FLEET_DOUT_OFF
		/// тип данных USHORT
		/// </summary>
		FleetDOUTOff = 0x000A,

		/// <summary>
		/// Команда запроса состояния дискретных выходов
		/// EGTS_FLEET_GET_DOUT_DATA
		/// тип данных -
		/// </summary>
		FleetGetDOUTData = 0x000B,

		/// <summary>
		/// Команда запроса текущих данных местоположения. 
		/// При получении данной команды помимо подтверждения в виде подзаписи EGTS_SR_COMMAND_DATA сервиса EGTS_COMMAND_SERVICE абонентский терминал отправляет 
		/// телематическое сообщение, содержащее подзапись EGTS_SR_POS_DATA сервиса EGRS_TELEDATA_SERVICE
		/// EGTS_FLEET_GET_POS_DATA
		/// тип данных -
		/// </summary>
		FleeGetPosition = 0x000C,

		/// <summary>
		/// Команда запроса состояния дискретных и аналоговых входов. 
		/// При получении данной команды помимо подтверждения в виде подзаписи EGTS_SR_COMMAND_DATA сервиса EGTS_COMMAND_SERVICE абонентский терминал отправляет 
		/// телематическое сообщение, содержащее подзаписи EGTS_SR_POS_DATA и EGTS_SR_AD_SENSORS сервиса EGRS_TELEDATA_SERVICE
		/// EGTS_FLEET_GET_SENSORS_DATA
		/// тип данных -
		/// </summary>
		FleetGetSensorData = 0x000D,

		/// <summary>
		/// Команда запроса состояния шлейфовых входов. 
		/// При получении данной команды помимо подтверждения в виде подзаписи EGTS_SR_COMMAND_DATA сервиса EGTS_COMMAND_SERVICE абонентский терминал отправляет 
		/// телематическое сообщение, содержащее подзаписи EGTS_SR_POS_DATA и EGTS_SR_LOOPIN_DATA сервиса EGRS_TELEDATA_SERVICE
		/// EGTS_FLEET_GET_LIN_DATA
		/// тип данных -
		/// </summary>
		FleetGetLoopinData = 0x000E,

		/// <summary>
		/// Команда запроса состояния счетных входов. 
		/// При получении данной команды помимо подтверждения в виде подзаписи EGTS_SR_COMMAND_DATA сервиса EGTS_COMMAND_SERVICE абонентский терминал отправляет 
		/// телематическое сообщение, содержащее подзаписи; EGTS_SR_POS_DATA и EGTS_SR_COUNTERS_DATA сервиса EGRS_TELEDATA_SERVICE
		/// EGTS_FLEET_GET_CIN_DATA
		/// тип данных -
		/// </summary>
		FleetGetCountersData = 0x000F,

		/// <summary>
		/// Команда запроса состояния абонентского терминала. 
		/// При получении данной команды помимо подтверждения в виде подзаписи EGTS_SR_COMMAND_DATA сервиса EGTS_COMMAND_SERVICE абонентский терминал отправляет 
		/// телематическое сообщение, содержащее подзаписи EGTS_SR_POS_DATA и EGTS_SR_STATE_DATA сервиса EGRS_TELEDATA_SERVICE
		/// EGTS_FLEET_GET_STATE
		/// тип данных -
		/// </summary>
		FleetGetState = 0x0010,

		/// <summary>
		/// Команда для обнуления показаний внутреннего одометра абонентского терминала. 
		/// Для обработки данной команды оператор отправляет корректные значения полей ACL и AC из Таблицы 17 спецификации протокола Поддержки услуг
		/// EGTS_FLEET_ODOM_CLEAR
		/// тип данных -
		/// </summary>
		FleetClearOdometer = 0x0011,

		/// <summary>
		/// Команда на осуществление
		/// экстренного вызова с абонентского
		/// терминала. 
		/// Используется только через SMS. 
		/// Команда содержит один параметр,
		/// который определяет тип события: 
		/// 0 - ручной вызов; 
		/// 1 - автоматический вызов 
		/// EGTS_ECALL_REQ    
		/// </summary>
		RequestEmergencyCall = 0x0112,

		/// <summary>
		/// Команда на осуществление
		/// повторной передачи МНД.
		/// Используется только через SMS. 
		/// Команда содержит два параметра: 
		/// MID - идентификатор сообщения
		/// запрашиваемого МНД. Если параметр
		/// MID = 0, то отправляется 
		/// новое сообщение; 
		/// TRANSPORT - тип используемого
		/// абонентского терминала при
		/// отправке МНД: 
		/// 0 - любой, на усмотрение
		/// абонентского терминала; 
		/// 1 - через голосовой канал; 
		/// 2 - через SMS; 
		/// 3 - через сервис пакетной
		/// передачи данных 
		/// EGTS_ECALL_MSD_REQ
		/// </summary>
		RequestMSD = 0x0113,

		#endregion commands

		#region parameters

		// Радио mute (только для конфигурации дополнительного оборудования)
		/// <summary>
		/// Задержка между установкой сигнала радио mute и началом проигрывания звука, миллисекунды
		/// EGTS_RADIO_MUTE_DELAY 
		/// тип данных INT
		/// значение по умолчнию 500
		/// </summary>
		RadioMuteDelay = 0x0201,

		/// <summary>
		/// Задержка между снятием сигнала радио mute и окончанием проигрывания звука , миллисекунды
		/// EGTS_RADIO_UNMUTE_DELAY 
		/// тип данных INT
		/// значение по умолчнию 500
		/// </summary>
		RadioUnmuteDelay = 0x0202,

		// Установки общего назначения
		/// <summary>
		/// Параметр, определяющий точку доступа GPRS
		/// EGTS_GPRS_APN
		/// тип данных STRING
		/// значение по умолчнию “”
		/// </summary>
		GprsApn = 0x0203,

		/// <summary>
		/// Адрес и порт сервера для связи с использованием TCP/IP протокола.
		/// EGTS_SERVER_ADDRESS
		/// тип данных STRING
		/// значение по умолчнию “”
		/// </summary>
		ServerAddress = 0x0204,

		/// <summary>
		/// PIN код SIM карты
		/// EGTS_SIM_PIN
		/// тип данных INT
		/// значение по умолчнию 0
		/// </summary>
		SimPin = 0x0205,

		/// <summary>
		/// Флаг, разрешающий автоматическую регистрацию SIM в сети после включения питания
		/// EGTS_AUTOMATIC_REGISTRATION 
		/// тип данных BOOLEAN
		/// значение по умолчнию 1
		/// </summary>
		AutomaticRegistration = 0x0207,

		/// <summary>
		/// Интервал проведения внутреннего тестирования, часы.  Если значение установлено в 0, то самотестирование не проводится.
		/// EGTS_SELFTEST_INTERVAL 
		/// тип данных INT
		/// значение по умолчнию 0
		/// </summary>
		SelftestInterval = 0x0208,

		/// <summary>
		/// Промежуток времени, в течение которого терминал остается зарегистрированным в сети после передачи результатов самотестирования оператору системы, секунды
		/// EGTS_POST_TEST_REGISTRATION_TIME
		/// тип данных INT
		/// значение по умолчнию 0
		/// </summary>
		PostTestRegistrationTime = 0x0209,

		/// <summary>
		/// Дистанция, на которой режим тестирования выключается автоматически, метры
		/// EGTS_TEST_MODE_END_DISTANCE 
		/// тип данных INT
		/// значение по умолчнию 300
		/// </summary>
		TestModeEndDistance = 0x020A,

		/// <summary>
		/// Дистанция, на которой режим «автосервис» выключается автоматически, метры
		/// EGTS_GARAGE_MODE_END_DISTANCE
		/// тип данных INT
		/// значение по умолчнию 300
		/// </summary>
		GarageModeEndDistance = 0x020B,

		/// <summary>
		/// Линия, сигнализирующая, что система находится в режиме “в гараже” NONE - нет сигнализации режима PIN_X – PIN_X линия, активируемая, когда система находится в данном режиме 
		/// EGTS_GARAGE_MODE_PIN 
		/// тип данных ENUM {NONE=0, PIN_1 =1,.. PIN_8=8}
		/// значение по умолчнию 0
		/// </summary>
		GarageModePin = 0x020C,

		/// <summary>
		/// Интервал тревожного счетчика в режиме тестирования, мин 
		/// EGTS_TEST_MODE_WATCHDOG 
		/// тип данных INT
		/// значение по умолчнию 10
		/// </summary>
		TestModeWatchdog = 0x020E,

		// Пакетная передача данных
		/// <summary>
		/// Параметр, указывающий на необходимость использования GPRS_WHITE_LIST при организации пакетной передачи данных
		/// EGTS_USE_GPRS_WHITE_LIST
		/// тип данных BOOLEAN
		/// значение по умолчнию 1
		/// </summary>
		UseGprsWhiteList = 0x0230,

		/// <summary>
		/// Список сетей, в которых разрешена пакетная передача данных. Если список GPRS_WHITWE_LIST пуст, то пакетная передача данных запрещена, MCC (Mobile Country Code) 3 символа +MNC(Mobile Network Code)  3 символа
		/// EGTS_GPRS_WHITE_LIST
		/// тип данных ARRAY OF STRING [20]
		/// значение по умолчнию “”, “”, ””, ””, “”, “”, “”, ””, ””, “”, “”, “”, ””, ””, “”, “”, “”, ””, ””, “”
		/// </summary>
		GprsWhiteList = 0x0231,

		// Режим тестирования
		/// <summary>
		/// Если терминал был зарегистрирован в сети посредством нажатия на кнопку включения дополнительных услуг, и команда на запуск сессии тестирования не была получена со стороны оператора системы в течение данного промежутка времени, то терминал должен прекратить регистрацию в сети, минуты
		/// EGTS_TEST_REGISTRATION_TIMEOUT
		/// тип данных INT
		/// значение по умолчнию 5
		/// </summary>
		TestRegistrationTimeout = 0x0241,

		/// <summary>
		/// Если терминал был зарегистрирован в сети посредством нажатия на кнопку включения дополнительных услуг, то последующая регистрация терминала в сети при нажатии на кнопку включения дополнительных услуг возможна не ранее чем через данный промежуток времени. Если значение установлено в 0, то ограничений на последующую регистрацию Терминала в сети не накладывается, минуты
		/// EGTS_TEST_REGISTRATION_PERIOD
		/// тип данных INT
		/// значение по умолчнию 0
		/// </summary>
		TestRegistrationPeriod = 0x0242,

		// Прочие параметры
		/// <summary>
		/// Промежуток времени, через который отключается питание ГНСС приемника после выключения зажигания, миллисекунды
		/// EGTS_GNSS_POWER_OFF_TIME
		/// тип данных INT
		/// значение по умолчнию 0
		/// </summary>
		GnssPowerOffTime = 0x0301,

		/// <summary>
		/// Темп выдачи ГНСС приёмником, Герцы
		/// EGTS_GNSS_DATA_RATE
		/// тип данных INT/ 1, 2,5,10
		/// значение по умолчнию 1
		/// </summary>
		GnssDataRate = 0x0302,

		/// <summary>
		/// Минимальное значение угла возвышения (угла отсечки) навигационных космических аппаратов, градусы
		/// EGTS_GNSS_MIN_ELEVATION
		/// тип данных INT/ 5…15
		/// значение по умолчнию 5
		/// </summary>
		GnssMinElevation = 0x0303,


		// Параметры устройства
		/// <summary>
		/// Серийный номер устройства 
		/// EGTS_UNIT_SERIAL_NUMBER 
		/// тип данных STRING
		/// значение по умолчнию “”
		/// </summary>
		UnitSerialNumber = 0x0400,

		/// <summary>
		/// Версия аппаратной платформы 
		/// EGTS_UNIT_HW_VERSION 
		/// тип данных STRING
		/// значение по умолчнию “”
		/// </summary>
		UnitHwVersion = 0x0401,

		/// <summary>
		/// Версия программного обеспечения 
		/// EGTS_UNIT_SW_VERSION 
		/// тип данных STRING
		/// значение по умолчнию “”
		/// </summary>
		UnitSwVersion = 0x0402,

		/// <summary>
		/// Идентификатор поставщика устройства 
		/// EGTS_UNIT_VENDOR_ID 
		/// тип данных INT
		/// значение по умолчнию 0
		/// </summary>
		UnitVendorId = 0x0403,

		/// <summary>
		/// Уникальный идентификатор устройства, назначаемый оператором системы при первой активизации устройства
		/// EGTS_UNIT_ID
		/// тип данных INT
		/// значение по умолчнию 0
		/// </summary>
		UnitId = 0x0404,

		/// <summary>
		/// Номер IMEI 
		/// EGTS_UNIT_IMEI 
		/// тип данных STRING
		/// значение по умолчнию “”
		/// </summary>
		UnitImei = 0x0405,

		/// <summary>
		/// Скорость порта RS485
		/// EGTS_UNIT_RS485_BAUD_RATE
		/// тип данных INT
		/// значение по умолчнию 19200
		/// </summary>
		UnitRS485BaudRate = 0x0406,

		/// <summary>
		/// Количество стоп битов при передаче данных через порт RS485
		/// EGTS_UNIT_RS485_STOP_BITS
		/// тип данных INT
		/// значение по умолчнию 1
		/// </summary>
		UnitRS485StopBits = 0x0407,

		/// <summary>
		/// Способ проверки на четность при передаче данных через порт RS485:0 – проверка не производится;1 – проверка типа ODD;2 – проверка типа EVEN
		/// EGTS_UNIT_RS485_PARITY
		/// тип данных INT/0,1,2
		/// значение по умолчнию 0
		/// </summary>
		UnitRS485Parity = 0x0408,

		/// <summary>
		/// Предпочтительный язык для голосового общения по ISO 639:0x5F – Русский 
		/// EGTS_UNIT_LANGUAGE_ID 
		/// тип данных INT
		/// значение по умолчнию 0
		/// </summary>
		UnitLanguageId = 0x0410,

		/// <summary>
		/// Идентификатор телематической платформы, в хранилище которой находится информация об учётных данных устройства, списке предоставляемых услуг и их статусах
		/// EGTS_UNIT_HOME_DISPATCHER_ID
		/// тип данных INT
		/// значение по умолчнию 0
		/// </summary>
		UnitHomeDispatcherId = 0x0411,

		/// <summary>
		/// Метод использования услуг:1- простой метод (подразумевает, что все услуги по умолчанию доступны терминалу);0- с подтверждением (разрешены к использованию только те услуги, информация о разрешении использования которых пришла с телематической платформы)
		/// EGTS_SERVICE_AUTH_METHOD
		/// тип данных INT
		/// значение по умолчнию 1
		/// </summary>
		ServiceAuthMethod = 0x0412,

		/// <summary>
		/// Время между попытками установить соединение TCP/IP с сервером, в секундах
		/// EGTS_SERVER_CHECK_IN_PERIOD
		/// тип данных INT
		/// значение по умолчнию 30
		/// </summary>
		ServerCheckInPeriod = 0x0413,

		/// <summary>
		/// Количество попыток установления TCP/IP соединения с сервером, по достижению которого будет произведёна повторная установка сессии верхнего уровня (GPRS)
		/// EGTS_SERVER_CHECK_IN_ATTEMPTS
		/// тип данных INT
		/// значение по умолчнию 5
		/// </summary>
		ServerCheckInAttempts = 0x0414,

		/// <summary>
		/// Время, в течение которого терминал ожидает подтверждения с сервера на отправленный пакет, секунды.
		/// EGTS_SERVER_PACKET_TOUT
		/// тип данных INT
		/// значение по умолчнию 5
		/// </summary>
		ServerPacketTout = 0x0415,

		/// <summary>
		/// Количество попыток повторной отправки неподтверждённого пакета, по достижении которого, терминал производит повторную инициализацию сессии на уровне TCP/IP.
		/// EGTS_SERVER_PACKET_RETRANSMIT_ATTEMPTS
		/// тип данных INT
		/// значение по умолчнию 3
		/// </summary>
		ServerPacketRetransmitAttempts = 0x0416,

		/// <summary>
		/// Уровень чувствительности микрофона
		/// EGTS_UNIT_MIC_LEVEL
		/// тип данных INT/0…10
		/// значение по умолчнию 8
		/// </summary>
		UnitMicLevel = 0x0417,

		/// <summary>
		/// Уровень громкости  динамика
		/// EGTS_UNIT_SPK_LEVEL
		/// тип данных INT/0…10
		/// значение по умолчнию 6
		/// </summary>
		UnitSpkLevel = 0x0418


		#endregion parameters
	}
}
